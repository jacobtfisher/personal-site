///
/// Editorial by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Tiles */

.tiles {
    $gutter: _size(gutter);
    $duration: 0.5s;
    $ease: 'ease';

    @include vendor('display', 'flex');
    @include vendor('flex-wrap', 'wrap');
    position: relative;
    margin: 0 0 0 0 - $gutter;

    article {
        @include vendor('transition', (
            'transform #{$duration} #{$ease}',
            'opacity #{$duration} #{$ease}'
        ));

        @include vendor('display', 'flex');
        @include vendor('flex-direction', 'column');
        @include vendor('justify-content', 'top');
        @include vendor('align-items', 'left');
    
        // flex-grow: 0;
        cursor: pointer;
        position: relative;
        width: calc(#{(100% / 3)} - #{$gutter * 1});
        margin: $gutter 0 0 $gutter;

        border: 1px solid _palette(border);
        border-radius: _size(border-radius) * 2;

        h3 {
            margin: 0 0 (_size(element-margin) * 0.2) 0;
        }

        .article-info {

            @include vendor('display', 'flex');
            @include vendor('flex-direction', 'column');
            @include vendor('justify-content', 'top');
            @include vendor('align-items', 'left');

            flex-grow: 1;
            
            padding: 1em;

            .padbox {
                flex-grow: 1;
            }

            b {
                color: _palette(fg);
                text-transform: uppercase;
                font-size: _font(size) * .8;
            }

        }

        &:hover {
            background-color: _palette(bg-alt) !important;
        }

        .bottom-banner {
            background-color: #689F38;
            border-radius: 0 0 _size(border-radius) * 2 _size(border-radius) * 2;
            padding: .2em 1em .5em 1em;

            text-align: right;
            font-size: _font(size) * 0.8;
            color: #FFFFFF;
        }

    }

    * + & {
        margin-top: _size(element-margin);
    }

    @include breakpoint(large) {
        $gutter: _size(gutter) * 0.5;

        article {
            width: calc(#{(100% / 3)} - #{$gutter * 1});
            margin: $gutter 0 0 $gutter;
        }
    }

    @include breakpoint(medium) {
        $gutter: _size(gutter) * 0.5;

        article {
            width: calc(#{(100% / 2)} - #{$gutter * 1});
            margin: $gutter 0 0 $gutter;
        }
    }

    @include breakpoint(small) {
        $gutter: _size(gutter) * 0.5;
        margin: 0;

        article {
            width: 100%;
            margin: $gutter 0 0 0;

            &:hover {
                > .image {
                    @include vendor('transform', 'scale(1.0)');
                }
            }
        }
    }

    @include breakpoint(xsmall) {
        $gutter: _size(gutter) * 0.5;
        margin: 0;

        article {
            width: 100%;
            margin: $gutter 0 0 0 ;
            object-fit: cover;
        
            > .image {
                border-radius: _size(border-radius);
                padding-top:100%;
                height: 0;
                overflow: hidden;

            img {
                display: block;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }
    }
}
}

